<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function snowExamLoaderController($scope,$sce) {

	/* widget controller */
	var c = this;
	var g_form = $scope.page.g_form;
	c.isBegun = false;
	c.isTicketPage = false;
	c.showTest = function() {
		c.isBegun = !c.isBegun;
	};

	// On Change
	$scope.selectKey = function(event,keySelected,question) {
		if (c.isTicketPage == true) {
			g_form.addErrorMessage('You are not allow to edit');
			return;
		}

		var isSelected = !$(event.currentTarget).hasClass('element-selected');
		if (isSelected) {
			question.answerSelected.push(keySelected);
			keySelected.isSected = 'selected';
		} else {
			for( var i = 0; i < question.answerSelected.length; i++){ 
				if ( question.answerSelected[i].label == keySelected.label) { 
					question.answerSelected.splice(i, 1); 
				}
			}
			keySelected.isSected = 'unSelected';
		}

		// Set value to dataload field
		var field = 'dataload';
		g_form.setValue(field,JSON.stringify(c.data.items));
	};

	// Loading Question and check selected
	$scope.checkSelected = function(key,question) {
		for( var i = 0; i < question.answerSelected.length; i++){ 
			if (question.answerSelected[i].label == key.label) { 
				return 'selected';
			} else {
				return '';
			}
		}
	};

	// On New Cate Item Page Load
	if ($scope.data.page == 'sc_cat_item') {
		c.data.items = $scope.data.items;
		for(var k in c.data.items) {
			c.data.items[k].answerSelected = [];
			for (var j in k.keys) {
				k.keys[j].isSected = 'unSelected';
			}
		}
		c.data.items = shuffle(c.data.items);
	}

	// On TicketPage
	if ($scope.data.page == 'ticket') {
		c.data.items = $scope.data.items;
		c.isBegun = true;
		c.isTicketPage = true;
	}


	function shuffle(sourceArray) {
		for (var i = 0; i < sourceArray.length - 1; i++) {
			var j = i + Math.floor(Math.random() * (sourceArray.length - i));

			var temp = sourceArray[j];
			sourceArray[j] = sourceArray[i];
			sourceArray[i] = temp;
		}
		return sourceArray;
	}

	//Pagination
	c.indexStart = 0;
	c.range = $scope.data.limit;
	c.indexEnd = c.range - 1;
	c.currentPage = 1;

	$scope.goToPage = function(page) {
		var pre = c.currentPage;
		c.currentPage = page;

		if (page == 'end') 
			c.currentPage = $scope.data.pages.length;	

		c.indexStart = (c.indexStart + c.range*(c.currentPage-pre));
		c.indexEnd = (c.indexEnd + c.range*(c.currentPage-pre));
	};

}]]></client_script>
        <controller_as>c</controller_as>
        <css>/* Btn and Timer */
.center {
	color: white;
  margin: auto;
  width: fit-content;
  padding: 10px 40px;
  background-color: #1f8476;
  border-color: #1f8476;
  border-radius: 5px;
}

/* Test Body */


.test-body {
  padding: 0px 0px 10px 0px;
  background: repeating-linear-gradient(#F1EDE9, #F1EDE9 31px, #94ACD4 31px, #94ACD4 32px); 
}


.test-question {
  margin: 4% 6%;
  font-family: roboto-regular;
  font-size: 20px;
  font-weight: 500;
}

.test-options {
	font-size: 18px;
}

.test-answer-wrapper ul li {
  text-align: center;
  list-style: none;
  background-color: #87c52e;
  color: #fff;
  border: 1px solid #87c52e;
  border-radius: 15px;
  padding: 10px;
  margin: 8px 5px;
  box-shadow: 0 9px #999;
}

.col-float-left {
	float: left;
}

.element-selected {
	background-color: #ff5722 !important;
  box-shadow: 0 5px #666 !important;
  transform: translateY(4px);
}
.element-unSelected {
	background-color: #87c52e !important;
  box-shadow: 0 9px #999 !important;
}


/* Pagination */
.pagination a {
  color: black;
  float: left;
  padding: 8px 16px;
  text-decoration: none;
}

.pagination a.active {
  background-color: #607d8b;
  color: white;
  border-radius: 5px;
}

.pagination a:hover:not(.active) {
  background-color: #ddd;
  border-radius: 5px;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>exams</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Snow Exam Loader</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function(){
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	
	data.items = [];
	data.catItem = $sp.getParameter('sys_id');
	var util = new SnowPortalUtils(data.catItem);
	data.table = $sp.getParameter('table');
	data.page = $sp.getParameter('id');

	//Load data for new Page
	if (data.page == 'sc_cat_item') {
		// If this is normal snow scripting
		var topicDetail = util.getTopicDetail(data.catItem); 
		var listTypes = util.getListType(topicDetail);
		var list = util.getQBByTopic(topicDetail,listTypes);
		data.items = list;

	}

	//Load data for Ticket Page
	if (data.page == 'ticket' || data.page == 'form') {
		var dataJSON = new GlideRecord(data.table);
		if (dataJSON.get(data.catItem)) {
			data.items = JSON.parse(dataJSON.variables.dataload);
		}
	}

	//Pagination
	data.limit = 1;
	data.totalPages = 0;
	data.totalQuestions = data.items.length;
	data.pages = [];

	data.totalPages = Math.ceil(data.totalQuestions/data.limit);
	for(var i = 0; i < data.totalPages; i++) {
		data.pages.push(i+1);
	}


	data.catalogItemWidget = $sp.getWidget("snow_countdown_timer");


})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>TDO55</sys_created_by>
        <sys_created_on>2021-05-05 04:36:11</sys_created_on>
        <sys_id>dcca7ba7db7fe010b6429db2ca96196f</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>Snow Exam Loader</sys_name>
        <sys_package display_value="Snow Exam" source="x_292088_snow_exam">5dda0835dbbf2010b6429db2ca961999</sys_package>
        <sys_policy/>
        <sys_scope display_value="Snow Exam">5dda0835dbbf2010b6429db2ca961999</sys_scope>
        <sys_update_name>sp_widget_dcca7ba7db7fe010b6429db2ca96196f</sys_update_name>
        <sys_updated_by>CPHAN20</sys_updated_by>
        <sys_updated_on>2021-05-16 17:27:19</sys_updated_on>
        <template><![CDATA[<div class="center" ng-click="c.showTest()" ng-if="!c.isBegun">
  ${Begin}
</div>

<div ng-if="c.isBegun" class="test-wrapper">
  <div ng-if="!c.isTicketPage" class="test-timer">
    <sp-widget widget="data.catalogItemWidget"></sp-widget>
  </div>
  <div class="test-body"
       ng-repeat="question in c.data.items" 
       ng-if="$index <= c.indexEnd && $index >= c.indexStart">
    <div class="test-question">
      {{$index+1}}. <span ng-bind-html="question.question"></span>
    </div>

    <div class="test-answer-wrapper">
      <ul class="row test-options">
        <li ng-repeat="key in question.keys"
            ng-if="!key.empty"
            ng-click="selectKey($event,key,question)"
            class="col-float-left element-{{key.isSected}}">
          {{key.label}}
        </li>
      </ul>
    </div>
  </div>

  <div class="pagination">
    <div class="text-center">
      <a href="javascript:void(0)"
         ng-click="goToPage(number)"
         ng-repeat="number in data.pages"
         ng-class="c.currentPage == number ? 'active' : '' " >{{number}}</a>
      <a href="javascript:void(0)" ng-click="goToPage('end')">&raquo;</a>
    </div>
  </div>
</div>

]]></template>
    </sp_widget>
</record_update>
